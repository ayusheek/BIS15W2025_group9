homerange %>%
filter(class=="mammalia" & trophic.guild=="carnivore") %>%
group_by(family) %>%
summarise(mean_mass=mean(log10.mass))
homerange %>%
filter(class=="mammalia" & trophic.guild=="carnivore") %>%
select(family, trophic.guild, log10.mass) %>%
ggplot(aes(x=family, y=log10.mass))+
geom_boxplot()+
coord_flip()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(naniar)
colleges <- readr::read_csv("data/ca_college_data.csv") %>% janitor::clean_names()
glimpse(colleges)
names(colleges)
colleges <- clean_names(colleges)
colleges
colleges %>%
count(city) %>%
arrange(-n)
colleges %>%
count(city) %>%
top_n(10,n) %>%
ggplot(aes(x=city, y=n))+
geom_col()+
coord_flip()
colleges %>%
group_by(city) %>%
summarise(mean_cost=mean(costt4_a, na.rm=TRUE)) %>%
arrange(-mean_cost)
colleges %>%
filter(city=="Claremont" | instnm=="University of California-Davis") %>%
arrange(-costt4_a)
colleges %>%
ggplot(aes(x=adm_rate, y=c150_4_pooled))+
geom_point(na.rm=T)+
geom_smooth(method=lm, se=F, na.rm=T)
colleges %>%
ggplot(aes(x=costt4_a, y=c150_4_pooled))+
geom_point(na.rm=T)+
geom_smooth(metod=lm, se=F, na.rm=T)
colleges %>%
ggplot(aes(x=costt4_a, y=c150_4_pooled))+
geom_point(na.rm=T)+
geom_smooth(method=lm, se=F, na.rm=T)
UC <- colleges %>%
filter_all(any_vars(str_detect(., pattern = "University of California")))
UC <- colleges %>%
filter_all(any_vars(str_detect(., pattern = "University of California")))
UC
UC <- UC %>%
filter(city!="San Francisco" & city!="Hastings College of Law")
UC
UC <- UC %>%
separate(instnm, c("univ", "campus"), sep = "-")
UC <- UC %>%
separate(instnm, c("univ", "campus"), sep = "-")
UC <- UC %>%
separate(instnm, c("univ", "campus"), sep = "-")
UC %>%
select(campus, adm_rate) %>%
arrange(-adm_rate)
UC %>%
ggplot(aes(x=campus, y=adm_rate))+
geom_col()+
coord_flip()
View(UC)
UC %>%
select(campus, pcip26) %>%
arrange(-pcip26)
UC %>%
ggplot(aes(x=campus, y=pcip26))+
geom_col()+
coord_flip()
library("tidyverse")
library("janitor")
life_history <- read_csv("data/mammal_lifehistories_v2.csv", na="-999") %>% clean_names()
life_history %>%
count(order) %>%
ggplot(aes(x=order, y=n))+
geom_col()+
coord_flip()
life_history %>%
ggplot(aes(x=order))+
geom_bar()+
coord_flip()
life_history %>%
group_by(order) %>%
summarise(mean_mass=mean(mass, na.rm=T))
life_history %>%
group_by(order) %>%
summarise(mean_mass=mean(mass, na.rm=T)) %>%
ggplot(aes(x=order, y=mean_mass))+
geom_col()+
coord_flip()
options(scipen=999)#cancels scientific notation for the session
options(scipen=999)#cancels scientific notation for the session
life_history %>%
group_by(order) %>%
summarise(mean_mass=mean(mass, na.rm=T)) %>%
ggplot(aes(x=order, y=mean_mass))+
geom_col()+
coord_flip()+
scale_y_log10()
life_history %>%
group_by(order) %>%
summarise(mean_mass=mean(mass, na.rm=T)) %>%
ggplot(aes(x=reorder(order,mean_mass), y=mean_mass))+ # reorder the x-axis
geom_col()+
coord_flip()+
scale_y_log10()
life_history %>%
ggplot(aes(x=gestation, y=wean_mass))+
geom_point()+
scale_y_log10()
life_history %>%
ggplot(aes(x=gestation, y=wean_mass))+
geom_point()+
scale_y_log10()
life_history %>%
ggplot(aes(x=order, y=mass))+
geom_boxplot(na.rm=T)+
coord_flip()
life_history %>%
filter(order!= "Cetacea") %>%
ggplot(aes(x=order, y=mass))+
geom_boxplot(na.rm=T)+
coord_flip()+
scale_y_log10()
elephants <- read_csv("data/elephantsMF.csv") %>% clean_names()
elephants %>%
ggplot(aes(x=age, y=height))+
geom_point()+
geom_smooth(method=lm, se=F) #adds line of best fit
elephants %>%
ggplot(aes(x=age, y=height))+
geom_point()+
geom_smooth(method=lm, se=F)+
labs(title="Elephant Age vs. Height",
x="Age",
y="Height")
elephants %>%
ggplot(aes(x=age, y=height))+
geom_point()+
geom_smooth(method=lm, se=F)+
labs(title="Elephant Age vs. Height",
x="Age",
y="Height")+
theme(plot.title=element_text(size=rel(1.5), hjust=0.5))
elephants %>%
ggplot(aes(x=sex, fill = sex))+
geom_bar()+
labs(title="Elephant per Sex",
x="Sex",
y="n")+
theme(plot.title=element_text(size=rel(1.5), hjust=0.5))
life_history %>%
ggplot(aes(x=gestation, y=log10(mass), size = mass))+
geom_jitter() #can use geom_pont or eom_jitter. geom_jitter is used to make dense data less dense but it cannot fix a super dense data like this one
library(tidyverse)
library(janitor)
library(palmerpenguins)
options(scipen=999) #cancels the use of scientific notation for the session
p <- homerange %>%
ggplot(aes(x= log10.mass, y= log10.hra))
homerange <-
read_csv("data/Tamburelloetal_HomeRangeDatabase.csv", na = c("", "NA", "\\"))
p <- homerange %>%
ggplot(aes(x= log10.mass, y= log10.hra))
p <- homerange %>%
ggplot(aes(x= log10.mass, y= log10.hra))
View(p)
p+geom_point(size=1.25)#controls the size of the dots, make them bigger or smaller
p+geom_point(aes(color=thermoregulation), size=1.25)
p+geom_point(aes(shape=thermoregulation, color=thermoregulation), size=1.25)
homerange %>% count(taxon, sort=T)
homerange %>%
ggplot(aes(x=taxon, fill=taxon))+
geom_bar()+
coord_flip()+
labs(title="Observation by Taxon",
x="Taxonomic group",
y="n")
homerange %>%
ggplot(aes(x=taxon, fill=trophic.guild))+#shows herbivores and carnivores in each taxonomic group
geom_bar()+
coord_flip()+
labs(title="Observation by Taxon",
x="Taxonomic group",
y="n")
homerange %>%
ggplot(aes(x=taxon, fill=trophic.guild))+
geom_bar(position = "dodge")+
coord_flip()+
labs(title="Observation by Taxon",
x="Taxonomic group",
y="n")
homerange %>%
ggplot(aes(x=taxon, fill=trophic.guild))+
geom_bar(position = "dodge")+
theme(axis.text.x= element_text(angle=45, hjust = 1))
labs(title="Observation by Taxon",
x="Taxonomic group",
y="n")
homerange %>%
ggplot(aes(x=taxon, fill=trophic.guild))+
geom_bar(position = position_fill())+
scale_y_continuous(labels=scales::percent)+
coord_flip()
penguins <- penguins
penguins %>%
ggplot(aes(x=island, fill=species))+
geom_bar()+
labs(title = "Counts of Individuals by Island",
x="Island",
fill="Species") #changes the title of the Key
penguins %>%
ggplot(aes(x=island, fill=species))+
geom_bar(position = "dodge")+ #side by side bar plot as opposed to stacked on top of each other
labs(title = "Counts of Individuals by Island",
x="Island",
fill="Species")
penguins %>%
ggplot(aes(x=island, fill=sex))+
geom_bar(position = "dodge")+
labs(title = "Counts of Individuals by Island",
x="Island",
fill="Sex")
homerange %>%
ggplot(aes(x=class, y=log10.mass))+
geom_boxplot() #cuz were plotting a range, therefore we use boxplot
homerange %>%
ggplot(aes(x=class, y=log10.mass, group = taxon))+
geom_boxplot()
homerange %>%
ggplot(aes(x=class, y=log10.mass, fill = taxon))+ #fill gives a color coded key which is helpful. it also depends on the plot type but in this case fill works better than group
geom_boxplot()
library("tidyverse")
library("janitor")
library("naniar")
sharks <- read_csv("data/SharkIncidents_1950_2022_220302.csv") %>% clean_names()
summary(sharks)
sharks <- sharks
sharks
View(sharks)
miss_var_summary(sharks)
sharks <- sharks %>%
filter(incident_num!="NOT COUNTED")
sharks %>%
group_by(county, incident_num) %>%
summarise(total=n(), groups='keep')
sharks %>%
count(county) %>%
arrange(desc(n))
sharks %>%
group_by(county) %>%
summarise(n = n()) %>%
ggplot(aes(x=reorder(county, n), y=n)) +
geom_col(fill = "#0099f9", alpha=0.8)+
labs(title="Shark Incidents by County (1950-2022)",
x=NULL,
y="n") +
theme(axis.text.x = element_text(angle = 60, hjust = 1),
plot.title = element_text(size = 14, face="bold"))+
geom_text(aes(label = n), vjust = -0.2, size = 3, color = "black")
sharks %>%
group_by(month) %>%
summarise(total=n()) %>%
arrange(-total)
sharks %>%
group_by(month) %>%
summarise(total=n()) %>%
ggplot(aes(x=as_factor(month), y=total))+
geom_col(fill = "#0099f9", alpha=0.8)+
labs(title="Shark Incidents by Month",
x="Month",
y="n")+
theme(plot.title = element_text(size = 14, face="bold"))
sharks %>%
group_by(month) %>%
summarise(total=n()) %>%
ggplot(aes(x=as_factor(month), y=total))+
geom_col(fill = "#0099f9", alpha=0.8)+
labs(title="Shark Incidents by Month",
x="Month",
y="n")+
theme(plot.title = element_text(size = 14, face="bold"))
sharks %>%
select(county, injury) %>%
group_by(county, injury) %>%
summarise(total=n(), .groups='keep') %>%
pivot_wider(names_from = injury, values_from = total)%>%
mutate(total=sum(minor, major, fatal, none, na.rm=T)) %>%
arrange(desc(total))
sharks_injury %>%
ggplot(aes(x=county, y=total_incidents))+
geom_col()+
coord_flip()
sharks_injury <- sharks %>%
select(county, injury) %>%
filter(injury!="none") %>%
group_by(county, injury) %>%
summarise(count=n(), .groups = "drop") %>%
pivot_wider(names_from = injury, values_from = count, values_fill = list(n=0)) %>%
mutate(total_incidents=rowSums(across(where(is.numeric)),na.rm=T)) %>%
arrange(-total_incidents)
sharks_injury
sharks_injury %>%
ggplot(aes(x=county, y=total_incidents))+
geom_col()+
coord_flip()
sharks %>%
select(county, injury) %>%
group_by(county, injury) %>%
summarise(total=n(), .groups='keep') %>%
pivot_wider(names_from = injury, values_from = total)%>%
mutate(total=sum(minor, major, fatal, none, na.rm=T)) %>%
arrange(desc(total)) %>%
ggplot(aes(x=reorder(county, total), y=total))+
geom_col(fill = "#0099f9", alpha=0.8)+
labs(title="Shark Incidents by County",
x=NULL,
y="n")+
coord_flip()
sharks %>%
count(mode) %>%
arrange(-n)
sharks %>%
ggplot(aes(x=mode, fill=mode))+
geom_bar(alpha=0.8, position="dodge")+
labs(title="Incidents by Activity",
x=NULL,
y="Number of Incidents")+
theme(axis.text.x = element_text(angle = 60, hjust = 1),
plot.title = element_text(size = 14, face="bold"))
sharks %>%
count(species) %>%
arrange(-n)
sharks %>%
filter(species=="White") %>%
ggplot(aes(x=injury))+
geom_bar(fill = "#0099f9", alpha=0.8)+
labs(title="Incidents Involving Great White Sharks",
x="Injury",
y="n")+
theme(axis.text.x = element_text(angle = 60, hjust = 1),
plot.title = element_text(size = 14, face="bold"))
library(tidyverse)
library(janitor)
options(scipen=999) #cancels the use of scientific notation for the session
deserts <- read_csv("data/surveys_complete.csv")
homerange %>%
ggplot(aes(x=class, y=log10.mass))+
geom_boxplot()
homerange %>%
ggplot(aes(x=class, y=log10.mass, fill=class))+
geom_boxplot()
homerange %>%
ggplot(aes(x=class, y=log10.mass, fill=taxon))+
geom_boxplot()
speciesdmds <- deserts %>%
filter(species_id=="DM" | species_id=="DS") %>%
mutate(year=as.factor(year)) %>%
group_by(year, species_id) %>%
summarise(n=n(), .groups = 'keep') %>%
pivot_wider(names_from = species_id, values_from = n)#wide data is good but we wont be able to plot it n the next ques
deserts %>%
filter(species_id=="DM" | species_id=="DS") %>%
mutate(year=as.factor(year)) %>% #year variable to fator from numeric value
group_by(year, species_id) %>%
summarise(n=n(), .groups = 'keep') %>% #n=n is just a count
ggplot(aes(x=year, y=n, group = species_id, color=species_id))+
geom_line()+
geom_point(shape=5)+#it shows the dots on the graph; shape=any number will give u a different shape for the point
theme(axis.text.x = element_text(angle = 60, hjust = 1))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(naniar)
library(ggplot2)
library(RColorBrewer)
options(scipen=999) #turning off scientific notation
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(naniar)
library(ggplot2)
library(RColorBrewer)
options(scipen=999) #turning off scientific notation
movies1 <- read_csv("bollywood.csv") %>%
clean_names() %>%
rename(title=movie_name) %>%
mutate(across(where(is.character), tolower)) #changing all characters to lowercase
movies2 <- read_csv("bollywood_hits.csv") %>%
clean_names() %>%
mutate(across(where(is.character), tolower))
movies1 <- read_csv("bollywood.csv") %>%
clean_names() %>%
rename(title=movie_name) %>%
mutate(across(where(is.character), tolower)) #changing all characters to lowercase
movie_join <- inner_join(movies1, movies2, by="title")
movies1 <- read_csv("bollywood.csv") %>%
clean_names() %>%
rename(title=movie_name) %>%
mutate(across(where(is.character), tolower)) #changing all characters to lowercase
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(naniar)
library(ggplot2)
library(RColorBrewer)
options(scipen=999) #turning off scientific notation
movies1 <- read_csv("bollywood.csv") %>%
clean_names() %>%
rename(title=movie_name) %>%
mutate(across(where(is.character), tolower)) #changing all characters to lowercase
movies1 <- read_csv("bollywood.csv") %>%
clean_names() %>%
mutate(across(where(is.character), tolower)) #changing all characters to lowercase
movies2 <- read_csv("bollywood_hits.csv") %>%
clean_names() %>%
mutate(across(where(is.character), tolower))
movie_join <- inner_join(movies1, movies2, by="title")
bollywood <- movie_join %>%
select(-genre.y, -actors, -directors, -imdb_id) %>% #removing duplicate columns
rename(genre=genre.x) %>%
separate(release_date, into=c("date", "month", "year"), sep=" ") %>% #separate the date column
replace_with_na_all(condition = ~.x == "n/a") %>%
select(-release_year) #removing duplicate year column
names(bollywood)
write.table(bollywood, "bollywood.txt", sep = "\t", row.names = FALSE)
write.csv(bollywood, "bollywood.csv", row.names = FALSE)
bollywood_era <- bollywood %>%
mutate(bollywood_era = case_when(
year >= 2005 & year <= 2009 ~ "Old Bollywood",
year >= 2010 & year <= 2014 ~ "New Bollywood",
TRUE ~ "Other"
)) %>%
group_by(bollywood_era) %>%
summarise(count=n())
bollywood_era %>%
count(bollywood_era) %>%
ggplot(aes(x = bollywood_era, y = n, fill = bollywood_era)) +
geom_bar(stat = "identity", width = 0.5) +
labs(title = "Number of Movies in Old vs. New Bollywood", x = "Bollywood Era", y = "Number of Movies") +
theme_minimal() +
scale_fill_manual(values = c("Old Bollywood" = "blue", "New Bollywood" = "red")) +
theme(legend.position = "none", text = element_text(size = 12))
bollywood_eras <- bollywood %>%
mutate(era=case_when(year<=2009 ~"old",
year>2009 ~"new"))
bollywood_eras <- bollywood %>%
mutate(era=case_when(year<=2009 ~"old",
year>2009 ~"new"))
bollywood_eras %>%
group_by(era) %>%
filter(era!="NA") %>%
ggplot(aes(x = era, y = revenue_inr, fill = era)) +
geom_boxplot(outlier.color = "black", outlier.shape = 16) +
labs(title = "Revenue Comparison: Old vs. New Bollywood", x = "Bollywood Era", y = "Revenue (INR)") +
theme_minimal() +
scale_fill_manual(values = c("Old Bollywood" = "blue", "New Bollywood" = "red")) +
theme(legend.position = "none", text = element_text(size = 12))
write.csv(bollywood_eras, "bollywood_eras.csv", row.names = FALSE)
View(bollywood_eras)
bollywood_eras %>%
group_by(era) %>%
summarise(avg_revenue = mean(revenue_inr, na.rm = TRUE))
revenue_comparison <- bollywood_eras %>%
group_by(era) %>%
summarise(avg_revenue = mean(revenue_inr, na.rm = TRUE))
ggplot(revenue_comparison, aes(x = era, y = avg_revenue, fill = era)) +
geom_bar(stat = "identity") +
labs(title = "Average Revenue Comparison: Old vs New Bollywood",
x = "Era",
y = "Average Revenue (INR)") +
theme_minimal()
revenue_comparison <- bollywood_eras %>%
group_by(era) %>%
summarise(avg_revenue = mean(revenue_inr, na.rm = FALSE))
ggplot(revenue_comparison, aes(x = era, y = avg_revenue, fill = era)) +
geom_bar(stat = "identity") +
labs(title = "Average Revenue Comparison: Old vs New Bollywood",
x = "Era",
y = "Average Revenue (INR)") +
theme_minimal()
revenue_comparison <- bollywood_eras %>%
group_by(era) %>%
summarise(avg_revenue = mean(revenue_inr, na.rm = TRUE))
bollywood_erasclean <- bollywood_eras %>%
filter(!is.na(revenue_inr), !is.na(era))
revenue_comparison <- bollywood_erasclean %>%
group_by(era) %>%
summarise(avg_revenue = mean(revenue_inr, na.rm = TRUE))
ggplot(revenue_comparison, aes(x = era, y = avg_revenue, fill = era)) +
geom_bar(stat = "identity", color = "black", width = 0.5) +
scale_fill_manual(values = c("old" = "steelblue", "new" = "tomato")) +
labs(title = "Average Revenue Comparison: Old vs. New Bollywood",
x = "Era",
y = "Average Revenue (INR)") +
theme_minimal() +
theme(text = element_text(size = 14), legend.position = "none")
ggplot(revenue_comparison, aes(x = era, y = avg_revenue, fill = era)) +
geom_bar(stat = "identity", color = "black", width = 0.5) +
scale_fill_manual(values = c("old" = "steelblue", "new" = "red")) +
labs(title = "Average Revenue Comparison: Old vs. New Bollywood",
x = "Era",
y = "Average Revenue (INR)") +
theme_minimal() +
theme(text = element_text(size = 14), legend.position = "none")
